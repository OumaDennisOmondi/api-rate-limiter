pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                // Checkout code from your repository
                git url: 'https://github.com/OumaDennisOmondi/api-rate-limiter.git', branch: 'main'
            }
        }
 
 
        stage('Infa Init') {
            steps {
                script {
                    //Initialize terraform
                    sh ''' 
                    cd sysops/terraform
                    terraform init '''
                }
            }
        }

        stage('Infra Plan') {
            steps {
                script {
                    // Terraform plan
                    sh '''
                    cd sysops/terraform
                    terraform plan            \
                      -var "do_token=${DO_PAT}" \
                      -var "pvt_key=$PUB_KEY"
                    '''
                }
            }
        }

        stage('Infra Apply') {
            steps {
                script {
                    // Apply Terraform plan
                    sh '''
                    cd sysops/terraform
                    terraform apply -auto-approve  \
                      -var "do_token=${DO_PAT}" \
                      -var "pvt_key=$PUB_KEY"
                    '''
                }
            }
        }
        

        stage('Ansible Deploy Docker') {
            steps {
                ansiblePlaybook credentialsId: 'do-ssh', disableHostKeyChecking: true, installation: 'ansible', inventory: 'sysops/terraform/inventory', playbook: 'sysops/ansible/playbooks/java.yml', vaultTmpPath: ''

            }

        }
        stage('Ansible Install Java') {
            steps {
                ansiblePlaybook credentialsId: 'do-ssh', disableHostKeyChecking: true, installation: 'ansible', inventory: 'sysops/terraform/inventory', playbook: 'sysops/ansible/playbooks/java.yml', vaultTmpPath: ''
            }

        }
          
          stage('Ansible Checkout Repo') {
            steps {
                ansiblePlaybook credentialsId: 'do-ssh', disableHostKeyChecking: true, installation: 'ansible', inventory: 'sysops/terraform/inventory', playbook: 'sysops/ansible/playbooks/docker.yml', vaultTmpPath: ''
            }

        }
          stage('Ansible Build Image') {
            steps {
                ansiblePlaybook credentialsId: 'do-ssh', disableHostKeyChecking: true, installation: 'ansible', inventory: 'sysops/terraform/inventory', playbook: 'sysops/ansible/playbooks/build.yml', vaultTmpPath: ''
            }

        }
          stage('Ansible Deploy App') {
            steps {
                ansiblePlaybook credentialsId: 'do-ssh', disableHostKeyChecking: true, installation: 'ansible', inventory: 'sysops/terraform/inventory', playbook: 'sysops/ansible/playbooks/deploy-app.yml', vaultTmpPath: ''
            }

        }

        stage('Ansible Deploy Zabbix') {
            steps {
                ansiblePlaybook credentialsId: 'do-ssh', disableHostKeyChecking: true, installation: 'ansible', inventory: 'sysops/terraform/inventory', playbook: 'sysops/ansible/playbooks/zabbix.yml', vaultTmpPath: ''
            }

        }

          stage('Infra Destroy') {
            steps {
                script {
                    // Apply Terraform plan
                    sh '''
                    cd sysops/terraform
                    terraform destroy  -auto-approve \
                      -var "do_token=${DO_PAT}" \
                      -var "pvt_key=$PUB_KEY"
                    '''
                }
            }
        }
    }

    post {
        always {
            // Clean up any state files, logs, etc.
            cleanWs()
        }
    }
}
